package model2.mvcboard;


import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.List;
import java.util.Map;
import java.util.Vector;

import common.JDBConnect;
import model1.board.BoardDTO;

public class MVCBoardDAO extends JDBConnect {
	private PreparedStatement psmt;
    private Statement stmt;
    private ResultSet rs;
	
	
	public MVCBoardDAO() {
		super();
	}
	
	public int selectCount(Map<String, Object> map) {
		int totalCount = 0; // 결과(게시물 수)를 담을 변수

		// 게시물 수를 얻어오는 쿼리문 작성
		String query = "SELECT COUNT(*) FROM mvcboard";
		if (map.get("searchWord") != null) {
			query += " WHERE " + map.get("searchField") + " "
					+ " LIKE '%" + map.get("searchWord") + "%'";
		}

		try {
			stmt = getCon().createStatement();   // 쿼리문 생성
			rs = stmt.executeQuery(query);  // 쿼리 실행
			rs.next();  // 커서를 첫 번째 행으로 이동
			totalCount = rs.getInt(1);  // 첫 번째 칼럼 값을 가져옴
		}
		catch (Exception e) {
			System.out.println("게시물 수를 구하는 중 예외 발생");
			e.printStackTrace();
		}

		return totalCount; 
	}

	public List<MVCBoardDTO> selectListPage(Map<String, Object> map) {
		List<MVCBoardDTO> board = new Vector<MVCBoardDTO>();
		String query = "SELECT * FROM mvcboard"; 
		if (map.get("searchWord") != null) {
			query += " WHERE " + map.get("searchField")
			+ " LIKE '%" + map.get("searchWord") + "%' ";
		}
		query += " ORDER BY idx DESC"; 

		try {
			stmt = getCon().createStatement();   // 쿼리문 생성
			rs = stmt.executeQuery(query);  // 쿼리 실행
			while (rs.next()) {
				MVCBoardDTO dto = new MVCBoardDTO();
				dto.setIdx(rs.getString("idx"));
				dto.setName(rs.getString("name"));
				dto.setTitle(rs.getString("title"));
				dto.setContent(rs.getString("content"));
				dto.setPostdate(rs.getDate("postdate"));
				dto.setOfile(rs.getString("ofile"));
				dto.setSfile(rs.getString("sfile"));
				dto.setDowncount(rs.getInt("downcount"));
				dto.setPass(rs.getString("pass"));
				dto.setVisitcount(rs.getInt("visitcount"));
				board.add(dto);
			}

		} catch (Exception e) {
			System.out.println("게시물 조회 중 예외 발생");
			e.printStackTrace();
		}
		return board;
	}
	
	
	public int insertWrite(MVCBoardDTO dto) {
		int result = 0;

		try {
			// INSERT 쿼리문 작성 
			String query = "INSERT INTO mvcboard (name, title, content, ofile, sfile, pass) "
					+ "VALUES (?, ?, ?, ?, ?, ?)";

			psmt = getCon().prepareStatement(query);  // 동적 쿼리 
			psmt.setString(1, dto.getName());
			psmt.setString(2, dto.getTitle());
			psmt.setString(3, dto.getContent());
			psmt.setString(4, dto.getOfile());
			psmt.setString(5, dto.getSfile());
			psmt.setString(6, dto.getPass());

			result = psmt.executeUpdate(); 
		} catch (Exception e) {
			System.out.println("게시물 입력 중 예외 발생");
			e.printStackTrace();
		}

		return result;
	}
	
	public MVCBoardDTO selectView(String idx) { 
		MVCBoardDTO dto = new MVCBoardDTO();
        
        // 쿼리문 준비
        String query = "SELECT * FROM mvcboard WHERE idx=?";

        try {
            psmt = getCon().prepareStatement(query);
            psmt.setString(1, idx);    // 인파라미터를 일련번호로 설정 
            rs = psmt.executeQuery();  // 쿼리 실행 

            // 결과 처리
            if (rs.next()) {
            	dto.setIdx(rs.getString(1));
				dto.setName(rs.getString(2));
				dto.setTitle(rs.getString(3));
				dto.setContent(rs.getString(4));
				dto.setPostdate(rs.getDate(5));
				dto.setOfile(rs.getString(6));
				dto.setSfile(rs.getString(7));
				dto.setDowncount(rs.getInt(8));
				dto.setPass(rs.getString(9));
				dto.setVisitcount(rs.getInt(10)); 
            }
        } 
        catch (Exception e) {
            System.out.println("게시물 상세보기 중 예외 발생");
            e.printStackTrace();
        }
        
        return dto; 
    }
	
	public void updateVisitCount(String idx) { 
        // 쿼리문 준비 
        String query = "UPDATE mvcboard SET "
                     + " visitcount=visitcount+1 "
                     + " WHERE idx=?";
        
        try {
            psmt = getCon().prepareStatement(query);
            psmt.setString(1, idx);  // 인파라미터를 일련번호로 설정 
            psmt.executeUpdate();     // 쿼리 실행 
        } 
        catch (Exception e) {
            System.out.println("게시물 조회수 증가 중 예외 발생");
            e.printStackTrace();
        }
    }
	
	public void downCountPlus(String idx) {
		String query = "UPDATE mvcboard set "
				+ " downcount=downcount+1 "
				+ " WHERE idx=? ";
		try {
			psmt= getCon().prepareStatement(query);
			psmt.setString(1, idx);
			psmt.executeUpdate();
		}
		catch (Exception e) {}
	}

	public boolean confirmPassword(String pass, String idx) {
		boolean isCorr = true;
		try {
			String sql = "SELECT COUNT(*) FROM mvcboard WHERE pass=? AND IDX=?";
			psmt = getCon().prepareStatement(sql);
			psmt.setString(1, pass);
			psmt.setString(2, idx);
			rs = psmt.executeQuery();
			rs.next();
			if (rs.getInt(1) == 0) {
				isCorr = false;
			}
		}
		catch(Exception e) {
			isCorr = false;
			e.printStackTrace();
		}
		return isCorr;
	}
	
	public int deletePost(String idx) { 
        int result = 0;

        try {
            // 쿼리문 템플릿
            String query = "DELETE FROM mvcboard WHERE idx=?"; 

            // 쿼리문 완성
            psmt = getCon().prepareStatement(query); 
            psmt.setString(1, idx); 

            // 쿼리문 실행
            result = psmt.executeUpdate(); 
        } 
        catch (Exception e) {
            System.out.println("게시물 삭제 중 예외 발생");
            e.printStackTrace();
        }
        
        return result; // 결과 반환
    }
	
	
}
